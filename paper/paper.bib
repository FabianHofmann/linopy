@article{agrawalRewritingSystemConvex2018,
  title = {A Rewriting System for Convex Optimization Problems},
  author = {Agrawal, Akshay and Verschueren, Robin and Diamond, Steven and Boyd, Stephen},
  year = {2018},
  month = jan,
  journal = {Journal of Control and Decision},
  volume = {5},
  number = {1},
  pages = {42--60},
  issn = {2330-7706, 2330-7714},
  doi = {10.1080/23307706.2017.1397554},
  urldate = {2023-04-03},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/HWNIE65M/Agrawal et al. - 2018 - A rewriting system for convex optimization problem.pdf}
}

@misc{amploptimizationinc.AMPLStramlinedModeling,
  title = {{{AMPL}} - {{Stramlined}} Modeling for Real Optimization},
  author = {AMPL Optimization Inc.},
  journal = {AMPL},
  urldate = {2022-07-22},
  abstract = {Why AMPL? The AMPL system supports the entire optimization modeling lifecycle \textemdash{} formulation, testing, deployment, and maintenance \textemdash{} in an integrated way that promotes rapid development and reliable results. Using a high-level algebraic representation that describes optimization models in the...},
  howpublished = {https://ampl.com/},
  langid = {american},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/JNJKCUAT/ampl.com.html}
}

@article{AnacondaSoftwareDistribution2020,
  title = {Anaconda Software Distribution},
  year = {2020},
  journal = {Anaconda Documentation},
  publisher = {{Anaconda Inc.}},
  version = {Vers. 2-2.4.0}
}

@book{apsMOSEKOptimizerAPI2019,
  title = {{{MOSEK Optimizer API}} for {{Python}} 9.3.22},
  author = {ApS, {\relax MOSEK}},
  year = {2019}
}

@article{bealGEKKOOptimizationSuite2018,
  title = {{{GEKKO Optimization Suite}}},
  author = {Beal, Logan and Hill, Daniel and Martin, R. and Hedengren, John},
  year = {2018},
  month = jul,
  journal = {Processes},
  volume = {6},
  number = {8},
  pages = {106},
  issn = {2227-9717},
  doi = {10.3390/pr6080106},
  urldate = {2022-07-22},
  abstract = {This paper introduces GEKKO as an optimization suite for Python. GEKKO specializes in dynamic optimization problems for mixed-integer, nonlinear, and differential algebraic equations (DAE) problems. By blending the approaches of typical algebraic modeling languages (AML) and optimal control packages, GEKKO greatly facilitates the development and application of tools such as nonlinear model predicative control (NMPC), real-time optimization (RTO), moving horizon estimation (MHE), and dynamic simulation. GEKKO is an object-oriented Python library that offers model construction, analysis tools, and visualization of simulation and optimization. In a single package, GEKKO provides model reduction, an object-oriented library for data reconciliation/model predictive control, and integrated problem construction/solution/visualization. This paper introduces the GEKKO Optimization Suite, presents GEKKO's approach and unique place among AMLs and optimal control packages, and cites several examples of problems that are enabled by the GEKKO library.},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/CB6X756L/Beal et al. - 2018 - GEKKO Optimization Suite.pdf}
}

@misc{bestuzhevaSCIPOptimizationSuite2021,
  title = {The {{SCIP Optimization Suite}} 8.0 \textendash{} {{Optimization Online}}},
  author = {Bestuzheva, Ksenia and Besan{\c c}on, Mathieu and Chen, Wei-Kun and Chmiela, Antonia and Donkiewicz, Tim and van Doornmalen, Jasper and Eifler, Leon and Gaul, Oliver and Gamrath, Gerald and Gleixner, Ambros and Gottwald, Leona and Graczyk, Christoph and Halbig, Katrin and Hoen, Alexander and Hojny, Christopher and van der Hulst, Rolf and Koch, Thorsten and L{\"u}bbecke, Marco E. and Maher, Stephen J. and Matter, Frederic and M{\"u}hmer, Erik and M{\"u}ller, Benjamin and Pfetsch, Marc E. and Rehfeldt, Daniel and Schlein, Steffan and Schl{\"o}sser, Franziska and Serrano, Felipe and Shinano, Yuji and Sofranac, Boro and Turner, Mark and Vigerske, Stefan and Wegscheider, Fabian and Wellner, Philipp and Weninger, Dieter and Witzig, Jakob},
  year = {2021},
  urldate = {2022-08-16},
  langid = {american},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/8Y4FJKPN/8728.html}
}

@article{brownPyPSAPythonPower2018,
  ids = {brown_pypsa:_2018,pypsa},
  title = {{{PyPSA}}: {{Python}} for {{Power System Analysis}}},
  shorttitle = {{{PyPSA}}},
  author = {Brown, Tom and H{\"o}rsch, Jonas and Schlachtberger, David},
  year = {2018},
  month = jan,
  journal = {Journal of Open Research Software},
  volume = {6},
  eprint = {1707.09913},
  pages = {4},
  issn = {2049-9647},
  doi = {10.5334/jors.188},
  urldate = {2020-07-19},
  archiveprefix = {arxiv},
  langid = {english},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/5LKDYR7N/Brown et al. - 2018 - PyPSA Python for Power System Analysis.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/A6EADWS2/Brown et al. - 2018 - PyPSA Python for Power System Analysis.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/FXD8UHS4/Brown et al. - 2018 - PyPSA Python for Power System Analysis.pdf}
}

@article{brownPyPSAPythonPower2018a,
  title = {{{PyPSA}}: {{Python}} for Power System Analysis Version 0.13.1},
  author = {Brown, T. and H{\"o}rsch, J. and Schlachtberger, D.},
  year = {2018},
  doi = {10.5281/zenodo.1208706}
}

@article{brownSynergiesSectorCoupling2018b,
  title = {Synergies of Sector Coupling and Transmission Extension in a Cost-Optimised, Highly Renewable {{European}} Energy System},
  author = {Brown, T. and Schlachtberger, D. and Kies, A. and Schramm, S. and Greiner, M.},
  year = {2018},
  month = jan,
  journal = {arXiv:1801.05290 [physics]},
  eprint = {1801.05290},
  primaryclass = {physics},
  urldate = {2018-05-30},
  abstract = {There are two competing concepts for the integration of high shares of renewable energy: the coupling of electricity to other energy sectors, such as transport and heating, and the reinforcement of transmission networks. In this paper both sector coupling and continent-wide grid integration are considered in the model PyPSA-Eur-Sec-30, the first open, spatially-resolved, temporally-resolved and sector-coupled energy model of Europe. Using a simplified network with one node per country, the cost-optimal system is calculated for a 95\% reduction in carbon dioxide emissions compared to 1990, incorporating electricity, transport and heat demand. The demand-side management potential from battery electric vehicles (BEV), power-to-gas units (P2G) and long-term thermal energy storage (LTES) make a significant contribution to the smoothing of variability from wind and solar and to the reduction of total system costs. The cost-minimising integration of BEV pairs well with the daily variations of solar power, while P2G and LTES balance the synoptic and seasonal variations of demand and renewables. In all scenarios, an expansion of cross-border transmission reduces system costs, but the more tightly the energy sectors are coupled, the weaker the benefit of transmission becomes.},
  archiveprefix = {arxiv},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/3W863UEM/Brown et al. - 2018 - Synergies of sector coupling and transmission exte.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/WI983EY7/Brown et al. - 2018 - Synergies of sector coupling and transmission exte.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/94QTFVZR/1801.html;/home/fabian/snap/zotero-snap/common/Zotero/storage/GHVA6DU2/1801.html}
}

@misc{browntomPyPSAPythonPower2022,
  title = {{{PyPSA}}: {{Python}} for {{Power System Analysis}}},
  shorttitle = {{{PyPSA}}},
  author = {Brown, Tom and H{\"o}rsch, Jonas and Hofmann, Fabian and Neumann, Fabian and Zeyen, Lisa and Syranidis, Chloe and Frysztacki, Martha and Schlachtberger, David and Glaum, Philipp},
  year = {2022},
  month = apr,
  doi = {10.5281/ZENODO.6478312},
  urldate = {2022-04-26},
  abstract = {What's Changed Add pre-commit hooks by @euronion in https://github.com/PyPSA/PyPSA/pull/365 apply pre-commit formats by @fneum in https://github.com/PyPSA/PyPSA/pull/375 doc: fix binder links by @FabianHofmann in https://github.com/PyPSA/PyPSA/pull/378 add scikit-learn to doc environment for spatial clustering example by @fneum in https://github.com/PyPSA/PyPSA/pull/384 New Contributors @pre-commit-ci made their first contribution in https://github.com/PyPSA/PyPSA/pull/379 {$<$}strong{$>$}Full Changelog{$<$}/strong{$>$}: https://github.com/PyPSA/PyPSA/compare/v0.19.2...v0.19.3},
  copyright = {MIT License, Open Access},
  howpublished = {Zenodo}
}

@incollection{bussieckGeneralAlgebraicModeling2004,
  title = {General {{Algebraic Modeling System}} ({{GAMS}})},
  booktitle = {Modeling {{Languages}} in {{Mathematical Optimization}}},
  author = {Bussieck, Michael R. and Meeraus, Alex},
  editor = {Pardalos, Panos M. and Hearn, Donald W. and Kallrath, Josef},
  year = {2004},
  volume = {88},
  pages = {137--157},
  publisher = {{Springer US}},
  address = {{Boston, MA}},
  doi = {10.1007/978-1-4613-0215-5_8},
  urldate = {2022-08-29},
  isbn = {978-1-4613-7945-4 978-1-4613-0215-5}
}

@article{cplex2009v12,
  title = {V12. 1: {{User}}'s Manual for {{CPLEX}}},
  author = {Cplex, IBM ILOG},
  year = {2009},
  journal = {International Business Machines Corporation},
  volume = {46},
  number = {53},
  pages = {157}
}

@book{dantzigLinearProgrammingExtensions1963,
  title = {Linear {{Programming}} and {{Extensions}}},
  author = {Dantzig, George},
  year = {1963},
  publisher = {{RAND Corporation}},
  doi = {10.7249/R366},
  urldate = {2022-09-02},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/SLY4DL3G/Dantzig - 1963 - Linear Programming and Extensions.pdf}
}

@book{dantzigLinearProgrammingExtensions1998,
  title = {Linear Programming and Extensions},
  author = {Dantzig, George Bernard},
  year = {1998},
  series = {Princeton Landmarks in Mathematics and Physics},
  publisher = {{Princeton University Press}},
  address = {{Princeton (N. J.)}},
  isbn = {978-0-691-08000-0 978-0-691-05913-6},
  langid = {english},
  lccn = {519.7}
}

@manual{daskdevelopmentteamDaskLibraryDynamic2016,
  type = {Manual},
  title = {Dask: {{Library}} for Dynamic Task Scheduling},
  author = {{Dask Development Team}},
  year = {2016}
}

@article{diamondCVXPYPythonembeddedModeling2016,
  title = {{{CVXPY}}: {{A Python-embedded}} Modeling Language for Convex Optimization},
  author = {Diamond, Steven and Boyd, Stephen},
  year = {2016},
  journal = {Journal of Machine Learning Research},
  volume = {17},
  number = {83},
  pages = {1--5}
}

@article{dunningJuMPModelingLanguage2017,
  title = {{{JuMP}}: {{A Modeling Language}} for {{Mathematical Optimization}}},
  shorttitle = {{{JuMP}}},
  author = {Dunning, Iain and Huchette, Joey and Lubin, Miles},
  year = {2017},
  month = jan,
  journal = {SIAM Review},
  volume = {59},
  number = {2},
  pages = {295--320},
  issn = {0036-1445, 1095-7200},
  doi = {10.1137/15M1020575},
  urldate = {2022-07-11},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/CK3Y9ZJL/Dunning et al. - 2017 - JuMP A Modeling Language for Mathematical Optimiz.pdf}
}

@misc{FICOXpressSolver,
  title = {{{FICO}}\textregistered{} {{Xpress Solver}}},
  journal = {FICO},
  urldate = {2022-07-18},
  abstract = {FICO\textregistered{} Xpress Optimization is composed of four core components: FICO\textregistered{} Xpress Insight, FICO\textregistered{} Xpress Executor, FICO\textregistered{} Xpress Solver and FICO\textregistered{} Xpress Workbench.},
  howpublished = {https://www.fico.com/en/products/fico-xpress-solver},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/7ZQMD23H/fico-xpress-solver.html}
}

@misc{forrestCoinorCbcRelease2022,
  title = {Coin-or/{{Cbc}}: {{Release}} Releases/2.10.8},
  shorttitle = {Coin-or/{{Cbc}}},
  author = {Forrest, John and Ralphs, Ted and Haroldo Gambini Santos and Vigerske, Stefan and Forrest, John and Hafer, Lou and Kristjansson, Bjarni and Jpfasano and EdwinStraver and Lubin, Miles and Rlougee and Jpgoncal1 and {Jan-Willem} and {H-I-Gassmann} and Brito, Samuel and Cristina and Saltzman, Matthew and Tosttost and Pitrus, Bruno and MATSUSHIMA, Fumiaki and {To-St}},
  year = {2022},
  month = may,
  doi = {10.5281/ZENODO.6522795},
  urldate = {2022-08-16},
  abstract = {COIN-OR Branch-and-Cut solver},
  copyright = {Open Access},
  howpublished = {Zenodo}
}

@article{fourerModelingLanguageMathematical1990,
  title = {A {{Modeling Language}} for {{Mathematical Programming}}},
  author = {Fourer, Robert and Gay, David M. and Kernighan, Brian W.},
  year = {1990},
  month = may,
  journal = {Management Science},
  volume = {36},
  number = {5},
  pages = {519--554},
  issn = {0025-1909, 1526-5501},
  doi = {10.1287/mnsc.36.5.519},
  urldate = {2022-08-16},
  abstract = {Practical large-scale mathematical programming involves more than just the application of an algorithm to minimize or maximize an objective function. Before any optimizing routine can be invoked, considerable effort must be expended to formulate the underlying model and to generate the requisite computational data structures. AMPL is a new language designed to make these steps easier and less error-prone. AMPL closely resembles the symbolic algebraic notation that many modelers use to describe mathematical programs, yet it is regular and formal enough to be processed by a computer system; it is particularly notable for the generality of its syntax and for the variety of its indexing operations. We have implemented an efficient translator that takes as input a linear AMPL model and associated data, and produces output suitable for standard linear programming optimizers. Both the language and the translator admit straightforward extensions to more general mathematical programs that incorporate nonlinear expressions or discrete variables.},
  langid = {english}
}

@misc{gamsdevelopmentcorporationGeneralAlgebraicModeling,
  title = {General {{Algebraic Modeling System}} ({{GAMS}})},
  author = {GAMS Development Corporation},
  urldate = {2022-07-22},
  howpublished = {https://www.gams.com/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/LCJFIAG2/www.gams.com.html}
}

@misc{GLPKGNUProject,
  title = {{{GLPK}} - {{GNU Project}} - {{Free Software Foundation}} ({{FSF}})},
  urldate = {2022-07-18},
  howpublished = {https://www.gnu.org/software/glpk/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/5IDSE3SA/glpk.html}
}

@article{gokeGraphbasedFormulationModeling2021,
  title = {A Graph-Based Formulation for Modeling Macro-Energy Systems},
  author = {G{\"o}ke, Leonard},
  year = {2021},
  month = nov,
  journal = {Applied Energy},
  volume = {301},
  eprint = {2004.10184},
  primaryclass = {physics},
  pages = {117377},
  issn = {03062619},
  doi = {10.1016/j.apenergy.2021.117377},
  urldate = {2022-09-02},
  abstract = {Averting the impending harms of climate change requires to replace fossil fuels with renewables as a primary source of energy. Non-electric renewable potential being limited, this implies extending the use of electricity generated from wind and solar beyond the power sector, either by direct electrification or synthetic fuels. Modeling the transformation towards such an energy system is challenging, because it imposes to consider fluctuations of wind and solar and the manifold ways the demand side could adjust to these fluctuations. This paper introduces a graph-based method to formulate energy system models to address these challenges. By organizing sets in rooted trees, two features to facilitate modeling high shares of renewables and sector integration are enabled. First, the method allows the level of temporal and spatial detail to be varied by energy carrier. This enables modeling with a high level of detail and a large scope, while keeping models computationally tractable. Second, the degree to which energy carriers are substitutable when converted, stored, transported, or consumed can be modeled to achieve a detailed but flexible representation of sector integration. An application of the formulation demonstrates that the variation of temporal detail achieves an average reduction in computation time of 70\textbackslash\%.},
  archiveprefix = {arxiv},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/Q5DMCV6H/Göke - 2021 - A graph-based formulation for modeling macro-energ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/QQ6ZSYMC/2004.html}
}

@misc{GurobiFastestSolver,
  title = {Gurobi - {{The Fastest Solver}}},
  journal = {Gurobi},
  urldate = {2022-07-18},
  abstract = {Gurobi builds and supports the leading math programming solvers available for all major problem types. It's all we do.},
  howpublished = {https://www.gurobi.com/},
  langid = {american},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/UGXMDJRY/www.gurobi.com.html}
}

@misc{GurobipyPythonInterface,
  title = {Gurobipy: {{Python}} Interface to {{Gurobi}}},
  shorttitle = {Gurobipy},
  urldate = {2022-07-18},
  copyright = {Proprietary},
  keywords = {lp,mip;,optimization;},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/4J6UUSQ3/gurobipy.html}
}

@article{harrisArrayProgrammingNumPy2020,
  title = {Array Programming with {{NumPy}}},
  author = {Harris, Charles R. and Millman, K. Jarrod and {van der Walt}, St{\'e}fan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and {van Kerkwijk}, Marten H. and Brett, Matthew and Haldane, Allan and {del R{\'i}o}, Jaime Fern{\'a}ndez and Wiebe, Mark and Peterson, Pearu and {G{\'e}rard-Marchant}, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
  year = {2020},
  month = sep,
  journal = {Nature},
  volume = {585},
  number = {7825},
  pages = {357--362},
  issn = {0028-0836, 1476-4687},
  doi = {10.1038/s41586-020-2649-2},
  urldate = {2022-07-11},
  abstract = {Abstract                            Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves               1               and in the first imaging of a black hole               2               . Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/UHBAQ4ZL/Harris et al. - 2020 - Array programming with NumPy.pdf}
}

@book{hartPyomoOptimizationModeling2017,
  title = {Pyomo \textemdash{} {{Optimization Modeling}} in {{Python}}},
  author = {Hart, William E. and Laird, Carl D. and Watson, Jean-Paul and Woodruff, David L. and Hackebeil, Gabriel A. and Nicholson, Bethany L. and Siirola, John D.},
  year = {2017},
  series = {Springer {{Optimization}} and {{Its Applications}}},
  volume = {67},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-319-58821-6},
  urldate = {2022-07-11},
  isbn = {978-3-319-58819-3 978-3-319-58821-6}
}

@article{horschPyPSAEurOpenOptimisation2018,
  title = {{{PyPSA-Eur}}: {{An}} Open Optimisation Model of the {{European}} Transmission System},
  shorttitle = {{{PyPSA-Eur}}},
  author = {H{\"o}rsch, Jonas and Hofmann, Fabian and Schlachtberger, David and Brown, Tom},
  year = {2018},
  month = nov,
  journal = {Energy Strategy Reviews},
  volume = {22},
  pages = {207--215},
  issn = {2211467X},
  doi = {10.1016/j.esr.2018.08.012},
  urldate = {2019-04-01},
  copyright = {All rights reserved},
  langid = {english},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/EU7PS544/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/GF6NK2LI/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/IECXLB5D/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/R33TMIQV/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/WRVZQJVU/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf}
}

@article{hoyerXarrayNDLabeled2017,
  title = {Xarray: {{N-D}} Labeled {{Arrays}} and {{Datasets}} in {{Python}}},
  shorttitle = {Xarray},
  author = {Hoyer, Stephan and Hamman, Joseph J.},
  year = {2017},
  month = apr,
  journal = {Journal of Open Research Software},
  volume = {5},
  pages = {10},
  issn = {2049-9647},
  doi = {10.5334/jors.148},
  urldate = {2020-09-29},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/28QPG5G7/Hoyer and Hamman - 2017 - xarray N-D labeled Arrays and Datasets in Python.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/V8A4HE3F/Hoyer and Hamman - 2017 - xarray N-D labeled Arrays and Datasets in Python.pdf}
}

@article{huangfuParallelizingDualRevised2018,
  title = {Parallelizing the Dual Revised Simplex Method},
  author = {Huangfu, Q. and Hall, J. A. J.},
  year = {2018},
  month = mar,
  journal = {Mathematical Programming Computation},
  volume = {10},
  number = {1},
  pages = {119--142},
  issn = {1867-2957},
  doi = {10.1007/s12532-017-0130-5},
  urldate = {2022-07-18},
  abstract = {This paper introduces the design and implementation of two parallel dual simplex solvers for general large scale sparse linear programming problems. One approach, called PAMI, extends a relatively unknown pivoting strategy called suboptimization and exploits parallelism across multiple iterations. The other, called SIP, exploits purely single iteration parallelism by overlapping computational components when possible. Computational results show that the performance of PAMI is superior to that of the leading open-source simplex solver, and that SIP complements PAMI in achieving speedup when PAMI results in slowdown. One of the authors has implemented the techniques underlying PAMI within the FICO Xpress simplex solver and this paper presents computational results demonstrating their value. In developing the first parallel revised simplex solver of general utility, this work represents a significant achievement in computational optimization.},
  langid = {english},
  keywords = {65K05,90C05,90C06,Linear programming,Parallel computing,Revised simplex method},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/G6TX6H9Z/Huangfu and Hall - 2018 - Parallelizing the dual revised simplex method.pdf}
}

@article{khachiyanPolynomialAlgorithmsLinear1980,
  title = {Polynomial Algorithms in Linear Programming},
  author = {Khachiyan, L. G.},
  year = {1980},
  month = jan,
  journal = {USSR Computational Mathematics and Mathematical Physics},
  volume = {20},
  number = {1},
  pages = {53--72},
  issn = {0041-5553},
  doi = {10.1016/0041-5553(80)90061-0},
  urldate = {2022-09-02},
  abstract = {We address for the first time the problem of correcting group discriminations within a score function, while minimizing the individual error. Each group is described by a probability density function on the set of profiles. We first solve the problem analytically in the case of two populations, with a uniform bonus-malus on the zones where each population is a majority. We then address the general case of n populations, where the entanglement of populations does not allow a similar analytical solution. We show that an approximate solution with an arbitrarily high level of precision can be computed with linear programming. Finally, we address the reverse problem where the error should not go beyond a certain value and we seek to minimize the discrimination. In this paper, we propose a pseudo polynomial size LP formulation for finding a payoff vector in the least core of a weighted voting game. The numbers of variables and constraints in our formulation are both bounded by O(nW+){$<$}math{$><$}mrow is="true"{$><$}mtext is="true"{$>$}O{$<$}/mtext{$><$}mrow is="true"{$><$}mo is="true"{$>$}({$<$}/mo{$><$}mi is="true"{$>$}n{$<$}/mi{$><$}msub is="true"{$><$}mrow is="true"{$><$}mi is="true"{$>$}W{$<$}/mi{$><$}/mrow{$><$}mrow is="true"{$><$}mo is="true"{$>$}+{$<$}/mo{$><$}/mrow{$><$}/msub{$><$}mo is="true"{$>$}){$<$}/mo{$><$}/mrow{$><$}/mrow{$><$}/math{$>$}, where n{$<$}math{$><$}mi is="true"{$>$}n{$<$}/mi{$><$}/math{$>$} is the number of players and W+{$<$}math{$><$}msub is="true"{$><$}mrow is="true"{$><$}mi is="true"{$>$}W{$<$}/mi{$><$}/mrow{$><$}mrow is="true"{$><$}mo is="true"{$>$}+{$<$}/mo{$><$}/mrow{$><$}/msub{$><$}/math{$>$} is the total sum of (integer) voting weights. When we employ our formulation, a commercial LP solver calculates a payoff vector in the least core of practical weighted voting games in a few seconds. We also extend our approach to vector weighted voting games. The deployment of edge computing infrastructure requires a careful placement of the edge servers, with an aim to improve application latencies and reduce data transfer load in opportunistic Internet of Things systems. In the edge server placement, it is important to consider computing capacity, available deployment budget, and hardware requirements for the edge servers and the underlying backbone network topology. In this paper, we thoroughly survey the existing literature in edge server placement, identify gaps and present an extensive set of parameters to be considered. We then develop a novel algorithm, called PACK, for server placement as a capacitated location\textendash allocation problem. PACK minimizes the distances between servers and their associated access points, while taking into account capacity constraints for load balancing and enabling workload sharing between servers. Moreover, PACK considers practical issues such as prioritized locations and reliability. We evaluate the algorithm in two distinct scenarios: one with high capacity servers for edge computing in general, and one with low capacity servers for Fog computing. Evaluations are performed with a data set collected in a real-world network, consisting of both dense and sparse deployments of access points across a city area. The resulting algorithm and related tools are publicly available as open source software.},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/TIJDK8PM/0041555380900610.html}
}

@article{ListOptimizationSoftware2022,
  title = {List of Optimization Software},
  year = {2022},
  month = jun,
  journal = {Wikipedia},
  urldate = {2022-07-18},
  abstract = {Given a transformation between input and output values, described by a mathematical function f, optimization deals with generating and selecting a best solution from some set of available alternatives, by systematically choosing input values from within an allowed set, computing the output of the function, and recording the best output values found during the process. Many real-world problems can be modeled in this way. For example, the inputs can be design parameters of a motor, the output can be the power consumption, or the inputs can be business choices and the output can be the obtained profit. An optimization problem, in this case a minimization problem, can be represented in the following way Given: a function f : A                         \textrightarrow{}                 \{\textbackslash displaystyle \textbackslash to \}    R from some set A to the real numbers Search for: an element x0 in A such that f(x0) {$\leq$} f(x) for all x in A.In continuous optimization, A is some subset of the Euclidean space Rn, often specified by a set of constraints, equalities or inequalities that the members of A have to satisfy. In combinatorial optimization, A is some subset of a discrete space, like binary strings, permutations, or sets of integers. The use of optimization software requires that the function f is defined in a suitable programming language and connected at compile or run time to the optimization software. The optimization software will deliver input values in A, the software module realizing f will deliver the computed value f(x) and, in some cases, additional information about the function like derivatives. In this manner, a clear separation of concerns is obtained: different optimization software modules can be easily tested on the same function f, or a given optimization software can be used for different functions f. The following tables provide a list of notable optimization software organized according to license and business model type.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1091166705},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/M5UU8G7J/List_of_optimization_software.html}
}

@misc{mitchelPulp2022,
  title = {Pulp},
  author = {Mitchel, Stuart and Kean, Anita and Mason, Andrew and O'Sullivan, Michael and Phillips, Antony and Peschiera, Franco},
  year = {2022},
  month = jul,
  urldate = {2022-07-11},
  abstract = {A python Linear Programming API},
  howpublished = {COIN-OR Foundation},
  keywords = {constraints,mip,pulp,python,solver}
}

@article{morshedGeneralizedAffineScaling2020,
  title = {Generalized Affine Scaling Algorithms for Linear Programming Problems},
  author = {Morshed, Md Sarowar and {Noor-E-Alam}, {\relax Md}.},
  year = {2020},
  month = feb,
  journal = {Computers \& Operations Research},
  volume = {114},
  pages = {104807},
  issn = {03050548},
  doi = {10.1016/j.cor.2019.104807},
  urldate = {2022-02-01},
  abstract = {Interior Point Methods are widely used to solve Linear Programming problems. In this work, we present two primal Affine Scaling algorithms to achieve faster convergence in solving Linear Programming problems. In the first algorithm, we integrate Nesterov's restarting strategy in the primal Affine Scaling method with an extra parameter, which in turn generalizes the original primal Affine Scaling method. We provide the proof of convergence for the proposed generalized algorithm considering long step size. We also provide the proof of convergence for the primal and dual sequence without the degeneracy assumption. This convergence result generalizes the original convergence result for the Affine Scaling methods and it gives us hints about the existence of a new family of methods. Then, we introduce a second algorithm to accelerate the convergence rate of the generalized algorithm by integrating a non-linear series transformation technique. Our numerical results show that the proposed algorithms outperform the original primal Affine Scaling method.},
  langid = {english},
  keywords = {Affine scaling,Dikin process,Interior point methods,Nesterov acceleration,Shanks series transformation},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/67IRH23W/Morshed and Noor-E-Alam - 2020 - Generalized affine scaling algorithms for linear p.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/7SR2ZPY7/S0305054819302497.html;/home/fabian/snap/zotero-snap/common/Zotero/storage/APQGZW5D/S0305054819302497.html}
}

@misc{OptimizationPuLPPuLP,
  title = {Optimization with {{PuLP}} \textemdash{} {{PuLP}} 2.7.0 Documentation},
  urldate = {2023-02-02},
  howpublished = {https://coin-or.github.io/pulp/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/9VKJIN2K/pulp.html}
}

@inproceedings{ploskasImpactScalingSimplex2013a,
  title = {The Impact of Scaling on Simplex Type Algorithms},
  booktitle = {Proceedings of the 6th {{Balkan Conference}} in {{Informatics}} on - {{BCI}} '13},
  author = {Ploskas, Nikolaos and Samaras, Nikolaos},
  year = {2013},
  pages = {17},
  publisher = {{ACM Press}},
  address = {{Thessaloniki, Greece}},
  doi = {10.1145/2490257.2490283},
  urldate = {2022-02-01},
  eventtitle = {The 6th {{Balkan Conference}} in {{Informatics}}},
  isbn = {978-1-4503-1851-8},
  langid = {english},
  keywords = {computational study,linear programming,operations research,scaling techniques,simplex algorithm}
}

@misc{Precommit,
  title = {Pre-Commit},
  urldate = {2022-08-16},
  howpublished = {https://pre-commit.com/\#contributing},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/MZ8Q7XFH/pre-commit.com.html}
}

@misc{rebackPandasdevPandasPandas2022,
  title = {Pandas-Dev/Pandas: {{Pandas}} 1.4.3},
  shorttitle = {Pandas-Dev/Pandas},
  author = {Reback, Jeff and Jbrockmendel and McKinney, Wes and Van Den Bossche, Joris and Roeschke, Matthew and Augspurger, Tom and Hawkins, Simon and Cloud, Phillip and Gfyoung and Sinhrks and Hoefler, Patrick and Klein, Adam and Terji Petersen and Tratner, Jeff and She, Chang and Ayd, William and Naveh, Shahar and JHM Darbyshire and Shadrach, Richard and Garcia, Marc and Schendel, Jeremy and Hayden, Andy and Saxton, Daniel and Gorelli, Marco Edward and Fangchen Li and W{\"o}rtwein, Torsten and Zeitlin, Matthew and Jancauskas, Vytautas and McMaster, Ali and Li, Thomas},
  year = {2022},
  month = jun,
  doi = {10.5281/ZENODO.3509134},
  urldate = {2022-07-11},
  abstract = {This is a patch release in the 1.4.x series and includes some regression and bug fixes. We recommend that all users upgrade to this version. See the full whatsnew for a list of all the changes. The release will be available on the defaults and conda-forge channels: &lt;code&gt;conda install pandas &lt;/code&gt; Or via PyPI: &lt;code&gt;python3 -m pip install --upgrade pandas &lt;/code&gt; Please report any issues with the release on the pandas issue tracker.},
  copyright = {Open Access},
  howpublished = {Zenodo}
}

@article{rehfeldtMassivelyParallelInteriorpoint2022,
  title = {A Massively Parallel Interior-Point Solver for {{LPs}} with Generalized Arrowhead Structure, and Applications to Energy System Models},
  author = {Rehfeldt, Daniel and Hobbie, Hannes and Sch{\"o}nheit, David and Koch, Thorsten and M{\"o}st, Dominik and Gleixner, Ambros},
  year = {2022},
  month = jan,
  journal = {European Journal of Operational Research},
  volume = {296},
  number = {1},
  pages = {60--71},
  issn = {03772217},
  doi = {10.1016/j.ejor.2021.06.063},
  urldate = {2021-09-07},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/BDF2RREX/Rehfeldt et al. - 2022 - A massively parallel interior-point solver for LPs.pdf}
}

@article{rewNetCDFInterfaceScientific1990,
  title = {{{NetCDF}}: An Interface for Scientific Data Access},
  shorttitle = {{{NetCDF}}},
  author = {Rew, R. and Davis, G.},
  year = {1990},
  month = jul,
  journal = {IEEE Computer Graphics and Applications},
  volume = {10},
  number = {4},
  pages = {76--82},
  issn = {1558-1756},
  doi = {10.1109/38.56302},
  abstract = {The network common data form (NetCDF), a data abstraction for storing and retrieving multidimensional data, is described. NetCDF is distributed as a software library that provides a concrete implementation of that abstraction. The implementation provides a machine-independent format for representing scientific data. Together, the abstraction, library, and data format support the creation, access, and sharing of scientific information. NetCDF is useful for supporting objects that contain dissimilar kinds of data in a heterogeneous network environment and for writing application software that does not depend on application-specific formats. Independence from particular machine representations is achieved by using a nonproprietary standard for external data representation. The discussion covers NetCDF data abstraction and interface; dimensions, variables, and attributes; direct access and hyperslab access, the NetCDF library; the data format; ncdump and ncgen utilities; experience, usability, and performance; limitations of NetCDF; and future plans.{$<>$}},
  keywords = {Application software,Computer architecture,Computer displays,Data visualization,Educational institutions,Information retrieval,Meteorology,Multidimensional systems,Software libraries,Workstations},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/Q98I95R9/56302.html}
}

@misc{teamXpressFICOXpress,
  title = {Xpress: {{FICO Xpress Optimizer Python}} Interface},
  shorttitle = {Xpress},
  author = {dev {team}, FICO Xpress Optimizer},
  urldate = {2022-07-18},
  copyright = {Other/Proprietary License},
  keywords = {minlp;,mip;,optimization;,Scientific/Engineering,Software Development,xpress},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/G5BJ5NSQ/xpress.html}
}

@article{vajdaReviewLinearProgramming1964,
  title = {Review of {{Linear Programming}} and {{Extensions}}.},
  author = {Vajda, S.},
  year = {1964},
  journal = {Journal of the Royal Statistical Society. Series A (General)},
  volume = {127},
  number = {2},
  eprint = {2344013},
  eprinttype = {jstor},
  pages = {294--295},
  publisher = {{[Royal Statistical Society, Wiley]}},
  issn = {0035-9238},
  doi = {10.2307/2344013},
  urldate = {2022-09-02},
  collaborator = {Dantzig, George B.}
}

@misc{WelcomeParamikoParamiko,
  title = {Welcome to {{Paramiko}}! \textemdash{} {{Paramiko}} Documentation},
  urldate = {2022-08-16},
  howpublished = {https://www.paramiko.org/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/3WV59RKE/www.paramiko.org.html}
}
